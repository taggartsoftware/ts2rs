// generated by ts2rs 0.1.4
// https://ts2rs.ctaggart.com/

impl ReadStream {
    pub fn new() -> ReadStream {
        JsCast::unchecked_into(Object::new())
    }
}
impl WriteStream {
    pub fn new() -> WriteStream {
        JsCast::unchecked_into(Object::new())
    }
}
impl AsRef<node_js::EventEmitter> for node_js::ReadStream {
    fn as_ref(&self) -> &node_js::EventEmitter {
        JsCast::unchecked_ref(self)
    }
}
impl From<node_js::ReadStream> for node_js::EventEmitter {
    fn from(child: node_js::ReadStream) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<node_js::ReadableStream> for node_js::ReadStream {
    fn as_ref(&self) -> &node_js::ReadableStream {
        JsCast::unchecked_ref(self)
    }
}
impl From<node_js::ReadStream> for node_js::ReadableStream {
    fn from(child: node_js::ReadStream) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<node_js::WritableStream> for node_js::ReadStream {
    fn as_ref(&self) -> &node_js::WritableStream {
        JsCast::unchecked_ref(self)
    }
}
impl From<node_js::ReadStream> for node_js::WritableStream {
    fn from(child: node_js::ReadStream) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<net::Socket> for node_js::ReadStream {
    fn as_ref(&self) -> &net::Socket {
        JsCast::unchecked_ref(self)
    }
}
impl From<node_js::ReadStream> for net::Socket {
    fn from(child: node_js::ReadStream) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<tty::ReadStream> for node_js::ReadStream {
    fn as_ref(&self) -> &tty::ReadStream {
        JsCast::unchecked_ref(self)
    }
}
impl From<node_js::ReadStream> for tty::ReadStream {
    fn from(child: node_js::ReadStream) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<node_js::EventEmitter> for node_js::WriteStream {
    fn as_ref(&self) -> &node_js::EventEmitter {
        JsCast::unchecked_ref(self)
    }
}
impl From<node_js::WriteStream> for node_js::EventEmitter {
    fn from(child: node_js::WriteStream) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<node_js::ReadableStream> for node_js::WriteStream {
    fn as_ref(&self) -> &node_js::ReadableStream {
        JsCast::unchecked_ref(self)
    }
}
impl From<node_js::WriteStream> for node_js::ReadableStream {
    fn from(child: node_js::WriteStream) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<node_js::WritableStream> for node_js::WriteStream {
    fn as_ref(&self) -> &node_js::WritableStream {
        JsCast::unchecked_ref(self)
    }
}
impl From<node_js::WriteStream> for node_js::WritableStream {
    fn from(child: node_js::WriteStream) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<net::Socket> for node_js::WriteStream {
    fn as_ref(&self) -> &net::Socket {
        JsCast::unchecked_ref(self)
    }
}
impl From<node_js::WriteStream> for net::Socket {
    fn from(child: node_js::WriteStream) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<tty::WriteStream> for node_js::WriteStream {
    fn as_ref(&self) -> &tty::WriteStream {
        JsCast::unchecked_ref(self)
    }
}
impl From<node_js::WriteStream> for tty::WriteStream {
    fn from(child: node_js::WriteStream) -> Self {
        JsCast::unchecked_into(child)
    }
}
