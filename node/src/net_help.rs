// generated by ts2rs 0.1.4
// https://ts2rs.ctaggart.com/

impl AddressInfo {
    pub fn new() -> AddressInfo {
        JsCast::unchecked_into(Object::new())
    }
}
impl ConnectOpts {
    pub fn new() -> ConnectOpts {
        JsCast::unchecked_into(Object::new())
    }
}
impl IpcNetConnectOpts {
    pub fn new() -> IpcNetConnectOpts {
        JsCast::unchecked_into(Object::new())
    }
}
impl IpcSocketConnectOpts {
    pub fn new() -> IpcSocketConnectOpts {
        JsCast::unchecked_into(Object::new())
    }
}
impl ListenOptions {
    pub fn new() -> ListenOptions {
        JsCast::unchecked_into(Object::new())
    }
}
impl OnReadOpts {
    pub fn new() -> OnReadOpts {
        JsCast::unchecked_into(Object::new())
    }
}
impl Server {
    pub fn new() -> Server {
        JsCast::unchecked_into(Object::new())
    }
}
impl Socket {
    pub fn new() -> Socket {
        JsCast::unchecked_into(Object::new())
    }
}
impl SocketConstructorOpts {
    pub fn new() -> SocketConstructorOpts {
        JsCast::unchecked_into(Object::new())
    }
}
impl TcpNetConnectOpts {
    pub fn new() -> TcpNetConnectOpts {
        JsCast::unchecked_into(Object::new())
    }
}
impl TcpSocketConnectOpts {
    pub fn new() -> TcpSocketConnectOpts {
        JsCast::unchecked_into(Object::new())
    }
}
impl AsRef<ConnectOpts> for IpcNetConnectOpts {
    fn as_ref(&self) -> &ConnectOpts {
        JsCast::unchecked_ref(self)
    }
}
impl From<IpcNetConnectOpts> for ConnectOpts {
    fn from(child: IpcNetConnectOpts) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<IpcSocketConnectOpts> for IpcNetConnectOpts {
    fn as_ref(&self) -> &IpcSocketConnectOpts {
        JsCast::unchecked_ref(self)
    }
}
impl From<IpcNetConnectOpts> for IpcSocketConnectOpts {
    fn from(child: IpcNetConnectOpts) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<SocketConstructorOpts> for IpcNetConnectOpts {
    fn as_ref(&self) -> &SocketConstructorOpts {
        JsCast::unchecked_ref(self)
    }
}
impl From<IpcNetConnectOpts> for SocketConstructorOpts {
    fn from(child: IpcNetConnectOpts) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<ConnectOpts> for IpcSocketConnectOpts {
    fn as_ref(&self) -> &ConnectOpts {
        JsCast::unchecked_ref(self)
    }
}
impl From<IpcSocketConnectOpts> for ConnectOpts {
    fn from(child: IpcSocketConnectOpts) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<node_js::EventEmitter> for Server {
    fn as_ref(&self) -> &node_js::EventEmitter {
        JsCast::unchecked_ref(self)
    }
}
impl From<Server> for node_js::EventEmitter {
    fn from(child: Server) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<node_js::EventEmitter> for Socket {
    fn as_ref(&self) -> &node_js::EventEmitter {
        JsCast::unchecked_ref(self)
    }
}
impl From<Socket> for node_js::EventEmitter {
    fn from(child: Socket) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<node_js::ReadableStream> for Socket {
    fn as_ref(&self) -> &node_js::ReadableStream {
        JsCast::unchecked_ref(self)
    }
}
impl From<Socket> for node_js::ReadableStream {
    fn from(child: Socket) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<node_js::WritableStream> for Socket {
    fn as_ref(&self) -> &node_js::WritableStream {
        JsCast::unchecked_ref(self)
    }
}
impl From<Socket> for node_js::WritableStream {
    fn from(child: Socket) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<ConnectOpts> for TcpNetConnectOpts {
    fn as_ref(&self) -> &ConnectOpts {
        JsCast::unchecked_ref(self)
    }
}
impl From<TcpNetConnectOpts> for ConnectOpts {
    fn from(child: TcpNetConnectOpts) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<SocketConstructorOpts> for TcpNetConnectOpts {
    fn as_ref(&self) -> &SocketConstructorOpts {
        JsCast::unchecked_ref(self)
    }
}
impl From<TcpNetConnectOpts> for SocketConstructorOpts {
    fn from(child: TcpNetConnectOpts) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<TcpSocketConnectOpts> for TcpNetConnectOpts {
    fn as_ref(&self) -> &TcpSocketConnectOpts {
        JsCast::unchecked_ref(self)
    }
}
impl From<TcpNetConnectOpts> for TcpSocketConnectOpts {
    fn from(child: TcpNetConnectOpts) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<ConnectOpts> for TcpSocketConnectOpts {
    fn as_ref(&self) -> &ConnectOpts {
        JsCast::unchecked_ref(self)
    }
}
impl From<TcpSocketConnectOpts> for ConnectOpts {
    fn from(child: TcpSocketConnectOpts) -> Self {
        JsCast::unchecked_into(child)
    }
}
