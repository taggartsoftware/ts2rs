// generated by ts2rs 0.1.4
// https://ts2rs.ctaggart.com/

#[wasm_bindgen(module = "domain")]
extern "C" {
    pub type Domain;
    #[wasm_bindgen(method)]
    pub fn run(this: &Domain, fn_: &JsValue, args: &Array) -> JsValue;
    #[wasm_bindgen(method, setter)]
    pub fn set_run(this: &Domain, value: &Function);
    #[wasm_bindgen(method)]
    pub fn add(this: &Domain, emitter: &JsValue);
    #[wasm_bindgen(method, setter)]
    pub fn set_add(this: &Domain, value: &Function);
    #[wasm_bindgen(method)]
    pub fn remove(this: &Domain, emitter: &JsValue);
    #[wasm_bindgen(method, setter)]
    pub fn set_remove(this: &Domain, value: &Function);
    #[wasm_bindgen(method)]
    pub fn bind(this: &Domain, cb: &JsValue) -> JsValue;
    #[wasm_bindgen(method, setter)]
    pub fn set_bind(this: &Domain, value: &Function);
    #[wasm_bindgen(method)]
    pub fn intercept(this: &Domain, cb: &JsValue) -> JsValue;
    #[wasm_bindgen(method, setter)]
    pub fn set_intercept(this: &Domain, value: &Function);
    #[wasm_bindgen(method, getter)]
    pub fn members(this: &Domain) -> Array;
    #[wasm_bindgen(method, setter)]
    pub fn set_members(this: &Domain, value: &Array);
    #[wasm_bindgen(method)]
    pub fn enter(this: &Domain);
    #[wasm_bindgen(method, setter)]
    pub fn set_enter(this: &Domain, value: &Function);
    #[wasm_bindgen(method)]
    pub fn exit(this: &Domain);
    #[wasm_bindgen(method, setter)]
    pub fn set_exit(this: &Domain, value: &Function);
    #[wasm_bindgen()]
    pub fn create() -> crate::domain::Domain;
}
