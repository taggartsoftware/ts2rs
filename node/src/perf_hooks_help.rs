// generated by ts2rs 0.1.4
// https://ts2rs.ctaggart.com/

impl EventLoopDelayMonitor {
    pub fn new() -> EventLoopDelayMonitor {
        JsCast::unchecked_into(Object::new())
    }
}
impl EventLoopMonitorOptions {
    pub fn new() -> EventLoopMonitorOptions {
        JsCast::unchecked_into(Object::new())
    }
}
impl Performance {
    pub fn new() -> Performance {
        JsCast::unchecked_into(Object::new())
    }
}
impl PerformanceEntry {
    pub fn new() -> PerformanceEntry {
        JsCast::unchecked_into(Object::new())
    }
}
impl PerformanceNodeTiming {
    pub fn new() -> PerformanceNodeTiming {
        JsCast::unchecked_into(Object::new())
    }
}
impl PerformanceObserver {
    pub fn new() -> PerformanceObserver {
        JsCast::unchecked_into(Object::new())
    }
}
impl PerformanceObserverEntryList {
    pub fn new() -> PerformanceObserverEntryList {
        JsCast::unchecked_into(Object::new())
    }
}
impl AsRef<crate::perf_hooks::PerformanceEntry> for crate::perf_hooks::PerformanceNodeTiming {
    fn as_ref(&self) -> &crate::perf_hooks::PerformanceEntry {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::perf_hooks::PerformanceNodeTiming> for crate::perf_hooks::PerformanceEntry {
    fn from(child: crate::perf_hooks::PerformanceNodeTiming) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<AsyncResource> for crate::perf_hooks::PerformanceObserver {
    fn as_ref(&self) -> &AsyncResource {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::perf_hooks::PerformanceObserver> for AsyncResource {
    fn from(child: crate::perf_hooks::PerformanceObserver) -> Self {
        JsCast::unchecked_into(child)
    }
}
