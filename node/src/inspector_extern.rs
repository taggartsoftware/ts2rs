// generated by ts2rs 0.1.4
// https://ts2rs.ctaggart.com/

#[wasm_bindgen(module = "inspector")]
extern "C" {
    pub type InspectorNotification;
    #[wasm_bindgen(method, getter)]
    pub fn method(this: &InspectorNotification) -> String;
    #[wasm_bindgen(method, setter)]
    pub fn set_method(this: &InspectorNotification, value: &str);
    #[wasm_bindgen(method, getter)]
    pub fn params(this: &InspectorNotification) -> JsValue;
    #[wasm_bindgen(method, setter)]
    pub fn set_params(this: &InspectorNotification, value: &JsValue);
    #[doc = "The inspector.Session is used for dispatching messages to the V8 inspector back-end and receiving message responses and notifications."]
    pub type Session;
    #[wasm_bindgen(constructor)]
    pub fn new_session() -> Session;
    #[wasm_bindgen(method)]
    pub fn connect(this: &Session);
    #[wasm_bindgen(method, setter)]
    pub fn set_connect(this: &Session, value: &Function);
    #[wasm_bindgen(method)]
    pub fn disconnect(this: &Session);
    #[wasm_bindgen(method, setter)]
    pub fn set_disconnect(this: &Session, value: &Function);
    #[wasm_bindgen(method)]
    pub fn post(this: &Session, method: &str, params: &JsValue, callback: &JsValue);
    #[wasm_bindgen(method, setter)]
    pub fn set_post(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_2(this: &Session, method: &str, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_2(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_3(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_3(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_4(
        this: &Session,
        method: &JsValue,
        params: Option<&runtime::EvaluateParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_4(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_5(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_5(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_6(
        this: &Session,
        method: &JsValue,
        params: Option<&runtime::AwaitPromiseParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_6(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_7(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_7(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_8(
        this: &Session,
        method: &JsValue,
        params: Option<&runtime::CallFunctionOnParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_8(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_9(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_9(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_10(
        this: &Session,
        method: &JsValue,
        params: Option<&runtime::GetPropertiesParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_10(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_11(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_11(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_12(
        this: &Session,
        method: &JsValue,
        params: Option<&runtime::ReleaseObjectParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_12(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_13(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_13(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_14(
        this: &Session,
        method: &JsValue,
        params: Option<&runtime::ReleaseObjectGroupParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_14(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_15(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_15(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_16(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_16(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_17(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_17(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_18(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_18(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_19(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_19(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_20(
        this: &Session,
        method: &JsValue,
        params: Option<&runtime::SetCustomObjectFormatterEnabledParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_20(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_21(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_21(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_22(
        this: &Session,
        method: &JsValue,
        params: Option<&runtime::CompileScriptParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_22(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_23(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_23(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_24(
        this: &Session,
        method: &JsValue,
        params: Option<&runtime::RunScriptParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_24(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_25(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_25(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_26(
        this: &Session,
        method: &JsValue,
        params: Option<&runtime::QueryObjectsParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_26(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_27(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_27(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_28(
        this: &Session,
        method: &JsValue,
        params: Option<&runtime::GlobalLexicalScopeNamesParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_28(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_29(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_29(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_30(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_30(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_31(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_31(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_32(
        this: &Session,
        method: &JsValue,
        params: Option<&debugger::SetBreakpointsActiveParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_32(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_33(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_33(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_34(
        this: &Session,
        method: &JsValue,
        params: Option<&debugger::SetSkipAllPausesParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_34(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_35(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_35(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_36(
        this: &Session,
        method: &JsValue,
        params: Option<&debugger::SetBreakpointByUrlParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_36(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_37(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_37(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_38(
        this: &Session,
        method: &JsValue,
        params: Option<&debugger::SetBreakpointParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_38(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_39(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_39(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_40(
        this: &Session,
        method: &JsValue,
        params: Option<&debugger::RemoveBreakpointParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_40(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_41(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_41(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_42(
        this: &Session,
        method: &JsValue,
        params: Option<&debugger::GetPossibleBreakpointsParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_42(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_43(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_43(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_44(
        this: &Session,
        method: &JsValue,
        params: Option<&debugger::ContinueToLocationParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_44(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_45(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_45(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_46(
        this: &Session,
        method: &JsValue,
        params: Option<&debugger::PauseOnAsyncCallParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_46(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_47(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_47(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_48(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_48(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_49(
        this: &Session,
        method: &JsValue,
        params: Option<&debugger::StepIntoParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_49(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_50(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_50(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_51(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_51(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_52(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_52(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_53(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_53(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_54(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_54(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_55(
        this: &Session,
        method: &JsValue,
        params: Option<&debugger::GetStackTraceParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_55(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_56(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_56(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_57(
        this: &Session,
        method: &JsValue,
        params: Option<&debugger::SearchInContentParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_57(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_58(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_58(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_59(
        this: &Session,
        method: &JsValue,
        params: Option<&debugger::SetScriptSourceParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_59(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_60(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_60(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_61(
        this: &Session,
        method: &JsValue,
        params: Option<&debugger::RestartFrameParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_61(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_62(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_62(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_63(
        this: &Session,
        method: &JsValue,
        params: Option<&debugger::GetScriptSourceParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_63(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_64(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_64(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_65(
        this: &Session,
        method: &JsValue,
        params: Option<&debugger::SetPauseOnExceptionsParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_65(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_66(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_66(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_67(
        this: &Session,
        method: &JsValue,
        params: Option<&debugger::EvaluateOnCallFrameParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_67(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_68(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_68(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_69(
        this: &Session,
        method: &JsValue,
        params: Option<&debugger::SetVariableValueParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_69(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_70(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_70(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_71(
        this: &Session,
        method: &JsValue,
        params: Option<&debugger::SetReturnValueParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_71(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_72(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_72(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_73(
        this: &Session,
        method: &JsValue,
        params: Option<&debugger::SetAsyncCallStackDepthParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_73(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_74(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_74(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_75(
        this: &Session,
        method: &JsValue,
        params: Option<&debugger::SetBlackboxPatternsParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_75(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_76(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_76(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_77(
        this: &Session,
        method: &JsValue,
        params: Option<&debugger::SetBlackboxedRangesParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_77(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_78(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_78(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_79(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_79(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_80(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_80(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_81(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_81(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_82(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_82(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_83(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_83(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_84(
        this: &Session,
        method: &JsValue,
        params: Option<&profiler::SetSamplingIntervalParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_84(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_85(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_85(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_86(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_86(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_87(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_87(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_88(
        this: &Session,
        method: &JsValue,
        params: Option<&profiler::StartPreciseCoverageParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_88(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_89(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_89(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_90(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_90(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_91(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_91(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_92(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_92(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_93(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_93(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_94(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_94(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_95(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_95(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_96(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_96(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_97(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_97(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_98(
        this: &Session,
        method: &JsValue,
        params: Option<&heap_profiler::StartTrackingHeapObjectsParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_98(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_99(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_99(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_100(
        this: &Session,
        method: &JsValue,
        params: Option<&heap_profiler::StopTrackingHeapObjectsParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_100(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_101(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_101(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_102(
        this: &Session,
        method: &JsValue,
        params: Option<&heap_profiler::TakeHeapSnapshotParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_102(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_103(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_103(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_104(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_104(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_105(
        this: &Session,
        method: &JsValue,
        params: Option<&heap_profiler::GetObjectByHeapObjectIdParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_105(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_106(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_106(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_107(
        this: &Session,
        method: &JsValue,
        params: Option<&heap_profiler::AddInspectedHeapObjectParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_107(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_108(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_108(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_109(
        this: &Session,
        method: &JsValue,
        params: Option<&heap_profiler::GetHeapObjectIdParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_109(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_110(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_110(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_111(
        this: &Session,
        method: &JsValue,
        params: Option<&heap_profiler::StartSamplingParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_111(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_112(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_112(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_113(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_113(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_114(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_114(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_115(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_115(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_116(
        this: &Session,
        method: &JsValue,
        params: Option<&node_tracing::StartParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_116(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_117(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_117(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_118(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_118(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_119(
        this: &Session,
        method: &JsValue,
        params: Option<&node_worker::SendMessageToWorkerParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_119(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_120(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_120(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_121(
        this: &Session,
        method: &JsValue,
        params: Option<&node_worker::EnableParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_121(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_122(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_122(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_123(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_123(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_124(
        this: &Session,
        method: &JsValue,
        params: Option<&node_worker::DetachParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_124(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_125(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_125(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_126(
        this: &Session,
        method: &JsValue,
        params: Option<&node_runtime::NotifyWhenWaitingForDisconnectParameterType>,
        callback: &JsValue,
    );
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_126(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = post ) ]
    pub fn post_127(this: &Session, method: &JsValue, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = post ) ]
    pub fn set_post_127(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener(this: &Session, event: &str, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener_2(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener_2(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener_3(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener_3(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener_4(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener_4(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener_5(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener_5(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener_6(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener_6(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener_7(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener_7(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener_8(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener_8(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener_9(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener_9(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener_10(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener_10(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener_11(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener_11(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener_12(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener_12(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener_13(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener_13(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener_14(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener_14(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener_15(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener_15(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener_16(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener_16(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener_17(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener_17(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener_18(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener_18(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener_19(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener_19(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener_20(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener_20(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener_21(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener_21(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener_22(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener_22(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener_23(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener_23(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener_24(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener_24(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener_25(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener_25(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener_26(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener_26(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener_27(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener_27(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener_28(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener_28(this: &Session, value: &Function);
    #[wasm_bindgen(method)]
    pub fn emit(this: &Session, event: &JsValue, args: &Array) -> bool;
    #[wasm_bindgen(method, setter)]
    pub fn set_emit(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = emit ) ]
    pub fn emit_2(this: &Session, event: &JsValue, message: &InspectorNotification) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = emit ) ]
    pub fn set_emit_2(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = emit ) ]
    pub fn emit_3(this: &Session, event: &JsValue, message: &InspectorNotification) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = emit ) ]
    pub fn set_emit_3(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = emit ) ]
    pub fn emit_4(this: &Session, event: &JsValue, message: &InspectorNotification) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = emit ) ]
    pub fn set_emit_4(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = emit ) ]
    pub fn emit_5(this: &Session, event: &JsValue) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = emit ) ]
    pub fn set_emit_5(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = emit ) ]
    pub fn emit_6(this: &Session, event: &JsValue, message: &InspectorNotification) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = emit ) ]
    pub fn set_emit_6(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = emit ) ]
    pub fn emit_7(this: &Session, event: &JsValue, message: &InspectorNotification) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = emit ) ]
    pub fn set_emit_7(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = emit ) ]
    pub fn emit_8(this: &Session, event: &JsValue, message: &InspectorNotification) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = emit ) ]
    pub fn set_emit_8(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = emit ) ]
    pub fn emit_9(this: &Session, event: &JsValue, message: &InspectorNotification) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = emit ) ]
    pub fn set_emit_9(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = emit ) ]
    pub fn emit_10(this: &Session, event: &JsValue, message: &InspectorNotification) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = emit ) ]
    pub fn set_emit_10(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = emit ) ]
    pub fn emit_11(this: &Session, event: &JsValue, message: &InspectorNotification) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = emit ) ]
    pub fn set_emit_11(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = emit ) ]
    pub fn emit_12(this: &Session, event: &JsValue, message: &InspectorNotification) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = emit ) ]
    pub fn set_emit_12(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = emit ) ]
    pub fn emit_13(this: &Session, event: &JsValue, message: &InspectorNotification) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = emit ) ]
    pub fn set_emit_13(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = emit ) ]
    pub fn emit_14(this: &Session, event: &JsValue) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = emit ) ]
    pub fn set_emit_14(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = emit ) ]
    pub fn emit_15(this: &Session, event: &JsValue, message: &InspectorNotification) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = emit ) ]
    pub fn set_emit_15(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = emit ) ]
    pub fn emit_16(this: &Session, event: &JsValue, message: &InspectorNotification) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = emit ) ]
    pub fn set_emit_16(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = emit ) ]
    pub fn emit_17(this: &Session, event: &JsValue, message: &InspectorNotification) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = emit ) ]
    pub fn set_emit_17(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = emit ) ]
    pub fn emit_18(this: &Session, event: &JsValue, message: &InspectorNotification) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = emit ) ]
    pub fn set_emit_18(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = emit ) ]
    pub fn emit_19(this: &Session, event: &JsValue) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = emit ) ]
    pub fn set_emit_19(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = emit ) ]
    pub fn emit_20(this: &Session, event: &JsValue, message: &InspectorNotification) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = emit ) ]
    pub fn set_emit_20(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = emit ) ]
    pub fn emit_21(this: &Session, event: &JsValue, message: &InspectorNotification) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = emit ) ]
    pub fn set_emit_21(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = emit ) ]
    pub fn emit_22(this: &Session, event: &JsValue, message: &InspectorNotification) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = emit ) ]
    pub fn set_emit_22(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = emit ) ]
    pub fn emit_23(this: &Session, event: &JsValue, message: &InspectorNotification) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = emit ) ]
    pub fn set_emit_23(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = emit ) ]
    pub fn emit_24(this: &Session, event: &JsValue) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = emit ) ]
    pub fn set_emit_24(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = emit ) ]
    pub fn emit_25(this: &Session, event: &JsValue, message: &InspectorNotification) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = emit ) ]
    pub fn set_emit_25(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = emit ) ]
    pub fn emit_26(this: &Session, event: &JsValue, message: &InspectorNotification) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = emit ) ]
    pub fn set_emit_26(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = emit ) ]
    pub fn emit_27(this: &Session, event: &JsValue, message: &InspectorNotification) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = emit ) ]
    pub fn set_emit_27(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = emit ) ]
    pub fn emit_28(this: &Session, event: &JsValue) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = emit ) ]
    pub fn set_emit_28(this: &Session, value: &Function);
    #[wasm_bindgen(method)]
    pub fn on(this: &Session, event: &str, listener: &JsValue) -> Session;
    #[wasm_bindgen(method, setter)]
    pub fn set_on(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on_2(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on_2(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on_3(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on_3(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on_4(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on_4(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on_5(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on_5(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on_6(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on_6(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on_7(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on_7(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on_8(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on_8(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on_9(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on_9(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on_10(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on_10(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on_11(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on_11(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on_12(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on_12(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on_13(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on_13(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on_14(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on_14(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on_15(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on_15(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on_16(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on_16(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on_17(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on_17(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on_18(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on_18(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on_19(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on_19(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on_20(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on_20(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on_21(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on_21(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on_22(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on_22(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on_23(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on_23(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on_24(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on_24(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on_25(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on_25(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on_26(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on_26(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on_27(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on_27(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on_28(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on_28(this: &Session, value: &Function);
    #[wasm_bindgen(method)]
    pub fn once(this: &Session, event: &str, listener: &JsValue) -> Session;
    #[wasm_bindgen(method, setter)]
    pub fn set_once(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once_2(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once_2(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once_3(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once_3(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once_4(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once_4(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once_5(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once_5(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once_6(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once_6(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once_7(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once_7(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once_8(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once_8(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once_9(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once_9(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once_10(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once_10(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once_11(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once_11(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once_12(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once_12(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once_13(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once_13(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once_14(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once_14(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once_15(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once_15(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once_16(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once_16(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once_17(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once_17(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once_18(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once_18(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once_19(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once_19(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once_20(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once_20(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once_21(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once_21(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once_22(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once_22(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once_23(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once_23(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once_24(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once_24(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once_25(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once_25(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once_26(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once_26(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once_27(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once_27(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once_28(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once_28(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener(this: &Session, event: &str, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener_2(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener_2(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener_3(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener_3(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener_4(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener_4(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener_5(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener_5(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener_6(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener_6(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener_7(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener_7(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener_8(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener_8(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener_9(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener_9(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener_10(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener_10(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener_11(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener_11(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener_12(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener_12(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener_13(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener_13(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener_14(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener_14(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener_15(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener_15(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener_16(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener_16(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener_17(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener_17(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener_18(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener_18(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener_19(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener_19(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener_20(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener_20(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener_21(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener_21(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener_22(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener_22(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener_23(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener_23(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener_24(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener_24(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener_25(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener_25(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener_26(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener_26(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener_27(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener_27(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener_28(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener_28(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener(this: &Session, event: &str, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener_2(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener_2(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener_3(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener_3(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener_4(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener_4(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener_5(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener_5(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener_6(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener_6(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener_7(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener_7(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener_8(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener_8(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener_9(this: &Session, event: &JsValue, listener: &JsValue) -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener_9(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener_10(this: &Session, event: &JsValue, listener: &JsValue)
    -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener_10(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener_11(this: &Session, event: &JsValue, listener: &JsValue)
    -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener_11(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener_12(this: &Session, event: &JsValue, listener: &JsValue)
    -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener_12(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener_13(this: &Session, event: &JsValue, listener: &JsValue)
    -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener_13(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener_14(this: &Session, event: &JsValue, listener: &JsValue)
    -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener_14(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener_15(this: &Session, event: &JsValue, listener: &JsValue)
    -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener_15(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener_16(this: &Session, event: &JsValue, listener: &JsValue)
    -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener_16(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener_17(this: &Session, event: &JsValue, listener: &JsValue)
    -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener_17(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener_18(this: &Session, event: &JsValue, listener: &JsValue)
    -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener_18(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener_19(this: &Session, event: &JsValue, listener: &JsValue)
    -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener_19(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener_20(this: &Session, event: &JsValue, listener: &JsValue)
    -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener_20(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener_21(this: &Session, event: &JsValue, listener: &JsValue)
    -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener_21(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener_22(this: &Session, event: &JsValue, listener: &JsValue)
    -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener_22(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener_23(this: &Session, event: &JsValue, listener: &JsValue)
    -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener_23(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener_24(this: &Session, event: &JsValue, listener: &JsValue)
    -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener_24(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener_25(this: &Session, event: &JsValue, listener: &JsValue)
    -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener_25(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener_26(this: &Session, event: &JsValue, listener: &JsValue)
    -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener_26(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener_27(this: &Session, event: &JsValue, listener: &JsValue)
    -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener_27(this: &Session, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener_28(this: &Session, event: &JsValue, listener: &JsValue)
    -> Session;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener_28(this: &Session, value: &Function);
    #[doc = "Activate inspector on host and port. Equivalent to node --inspect=[[host:]port], but can be done programatically after node has started."]
    #[doc = "If wait is true, will block until a client has connected to the inspect port and flow control has been passed to the debugger client."]
    #[wasm_bindgen()]
    pub fn open(port: Option<f64>, host: Option<&str>, wait: Option<bool>);
    #[doc = "Deactivate the inspector. Blocks until there are no active connections."]
    #[wasm_bindgen()]
    pub fn close();
    #[doc = "Return the URL of the active inspector, or `undefined` if there is none."]
    #[wasm_bindgen()]
    pub fn url() -> Option<String>;
}
