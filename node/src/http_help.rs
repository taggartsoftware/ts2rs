// generated by ts2rs 0.1.4
// https://ts2rs.ctaggart.com/

impl Agent {
    pub fn new() -> Agent {
        JsCast::unchecked_into(Object::new())
    }
}
impl AgentOptions {
    pub fn new() -> AgentOptions {
        JsCast::unchecked_into(Object::new())
    }
}
impl ClientRequest {
    pub fn new() -> ClientRequest {
        JsCast::unchecked_into(Object::new())
    }
}
impl ClientRequestArgs {
    pub fn new() -> ClientRequestArgs {
        JsCast::unchecked_into(Object::new())
    }
}
impl IncomingHttpHeaders {
    pub fn new() -> IncomingHttpHeaders {
        JsCast::unchecked_into(Object::new())
    }
}
impl IncomingMessage {
    pub fn new() -> IncomingMessage {
        JsCast::unchecked_into(Object::new())
    }
}
impl InformationEvent {
    pub fn new() -> InformationEvent {
        JsCast::unchecked_into(Object::new())
    }
}
impl OutgoingHttpHeaders {
    pub fn new() -> OutgoingHttpHeaders {
        JsCast::unchecked_into(Object::new())
    }
}
impl OutgoingMessage {
    pub fn new() -> OutgoingMessage {
        JsCast::unchecked_into(Object::new())
    }
}
impl RequestOptions {
    pub fn new() -> RequestOptions {
        JsCast::unchecked_into(Object::new())
    }
}
impl Server {
    pub fn new() -> Server {
        JsCast::unchecked_into(Object::new())
    }
}
impl ServerOptions {
    pub fn new() -> ServerOptions {
        JsCast::unchecked_into(Object::new())
    }
}
impl ServerResponse {
    pub fn new() -> ServerResponse {
        JsCast::unchecked_into(Object::new())
    }
}
impl AsRef<crate::node_js::EventEmitter> for crate::http::ClientRequest {
    fn as_ref(&self) -> &crate::node_js::EventEmitter {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http::ClientRequest> for crate::node_js::EventEmitter {
    fn from(child: crate::http::ClientRequest) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::node_js::WritableStream> for crate::http::ClientRequest {
    fn as_ref(&self) -> &crate::node_js::WritableStream {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http::ClientRequest> for crate::node_js::WritableStream {
    fn from(child: crate::http::ClientRequest) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::http::OutgoingMessage> for crate::http::ClientRequest {
    fn as_ref(&self) -> &crate::http::OutgoingMessage {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http::ClientRequest> for crate::http::OutgoingMessage {
    fn from(child: crate::http::ClientRequest) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::node_js::EventEmitter> for crate::http::IncomingMessage {
    fn as_ref(&self) -> &crate::node_js::EventEmitter {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http::IncomingMessage> for crate::node_js::EventEmitter {
    fn from(child: crate::http::IncomingMessage) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::node_js::ReadableStream> for crate::http::IncomingMessage {
    fn as_ref(&self) -> &crate::node_js::ReadableStream {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http::IncomingMessage> for crate::node_js::ReadableStream {
    fn from(child: crate::http::IncomingMessage) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::node_js::EventEmitter> for crate::http::OutgoingMessage {
    fn as_ref(&self) -> &crate::node_js::EventEmitter {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http::OutgoingMessage> for crate::node_js::EventEmitter {
    fn from(child: crate::http::OutgoingMessage) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::node_js::WritableStream> for crate::http::OutgoingMessage {
    fn as_ref(&self) -> &crate::node_js::WritableStream {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http::OutgoingMessage> for crate::node_js::WritableStream {
    fn from(child: crate::http::OutgoingMessage) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::http::ClientRequestArgs> for crate::http::RequestOptions {
    fn as_ref(&self) -> &crate::http::ClientRequestArgs {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http::RequestOptions> for crate::http::ClientRequestArgs {
    fn from(child: crate::http::RequestOptions) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<NetServer> for crate::http::Server {
    fn as_ref(&self) -> &NetServer {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http::Server> for NetServer {
    fn from(child: crate::http::Server) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::node_js::EventEmitter> for crate::http::ServerResponse {
    fn as_ref(&self) -> &crate::node_js::EventEmitter {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http::ServerResponse> for crate::node_js::EventEmitter {
    fn from(child: crate::http::ServerResponse) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::node_js::WritableStream> for crate::http::ServerResponse {
    fn as_ref(&self) -> &crate::node_js::WritableStream {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http::ServerResponse> for crate::node_js::WritableStream {
    fn from(child: crate::http::ServerResponse) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::http::OutgoingMessage> for crate::http::ServerResponse {
    fn as_ref(&self) -> &crate::http::OutgoingMessage {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http::ServerResponse> for crate::http::OutgoingMessage {
    fn from(child: crate::http::ServerResponse) -> Self {
        JsCast::unchecked_into(child)
    }
}
