// generated by ts2rs 0.1.4
// https://ts2rs.ctaggart.com/

impl AlternativeServiceOptions {
    pub fn new() -> AlternativeServiceOptions {
        JsCast::unchecked_into(Object::new())
    }
}
impl ClientHttp2Session {
    pub fn new() -> ClientHttp2Session {
        JsCast::unchecked_into(Object::new())
    }
}
impl ClientHttp2Stream {
    pub fn new() -> ClientHttp2Stream {
        JsCast::unchecked_into(Object::new())
    }
}
impl ClientSessionOptions {
    pub fn new() -> ClientSessionOptions {
        JsCast::unchecked_into(Object::new())
    }
}
impl ClientSessionRequestOptions {
    pub fn new() -> ClientSessionRequestOptions {
        JsCast::unchecked_into(Object::new())
    }
}
impl Http2SecureServer {
    pub fn new() -> Http2SecureServer {
        JsCast::unchecked_into(Object::new())
    }
}
impl Http2Server {
    pub fn new() -> Http2Server {
        JsCast::unchecked_into(Object::new())
    }
}
impl Http2ServerRequest {
    pub fn new() -> Http2ServerRequest {
        JsCast::unchecked_into(Object::new())
    }
}
impl Http2ServerResponse {
    pub fn new() -> Http2ServerResponse {
        JsCast::unchecked_into(Object::new())
    }
}
impl Http2Session {
    pub fn new() -> Http2Session {
        JsCast::unchecked_into(Object::new())
    }
}
impl Http2Stream {
    pub fn new() -> Http2Stream {
        JsCast::unchecked_into(Object::new())
    }
}
impl IncomingHttpHeaders {
    pub fn new() -> IncomingHttpHeaders {
        JsCast::unchecked_into(Object::new())
    }
}
impl IncomingHttpStatusHeader {
    pub fn new() -> IncomingHttpStatusHeader {
        JsCast::unchecked_into(Object::new())
    }
}
impl SecureClientSessionOptions {
    pub fn new() -> SecureClientSessionOptions {
        JsCast::unchecked_into(Object::new())
    }
}
impl SecureServerOptions {
    pub fn new() -> SecureServerOptions {
        JsCast::unchecked_into(Object::new())
    }
}
impl SecureServerSessionOptions {
    pub fn new() -> SecureServerSessionOptions {
        JsCast::unchecked_into(Object::new())
    }
}
impl ServerHttp2Session {
    pub fn new() -> ServerHttp2Session {
        JsCast::unchecked_into(Object::new())
    }
}
impl ServerHttp2Stream {
    pub fn new() -> ServerHttp2Stream {
        JsCast::unchecked_into(Object::new())
    }
}
impl ServerOptions {
    pub fn new() -> ServerOptions {
        JsCast::unchecked_into(Object::new())
    }
}
impl ServerSessionOptions {
    pub fn new() -> ServerSessionOptions {
        JsCast::unchecked_into(Object::new())
    }
}
impl ServerStreamFileResponseOptions {
    pub fn new() -> ServerStreamFileResponseOptions {
        JsCast::unchecked_into(Object::new())
    }
}
impl ServerStreamFileResponseOptionsWithError {
    pub fn new() -> ServerStreamFileResponseOptionsWithError {
        JsCast::unchecked_into(Object::new())
    }
}
impl ServerStreamResponseOptions {
    pub fn new() -> ServerStreamResponseOptions {
        JsCast::unchecked_into(Object::new())
    }
}
impl SessionOptions {
    pub fn new() -> SessionOptions {
        JsCast::unchecked_into(Object::new())
    }
}
impl SessionState {
    pub fn new() -> SessionState {
        JsCast::unchecked_into(Object::new())
    }
}
impl Settings {
    pub fn new() -> Settings {
        JsCast::unchecked_into(Object::new())
    }
}
impl StatOptions {
    pub fn new() -> StatOptions {
        JsCast::unchecked_into(Object::new())
    }
}
impl StreamPriorityOptions {
    pub fn new() -> StreamPriorityOptions {
        JsCast::unchecked_into(Object::new())
    }
}
impl StreamState {
    pub fn new() -> StreamState {
        JsCast::unchecked_into(Object::new())
    }
}
impl AsRef<crate::node_js::EventEmitter> for crate::http2::ClientHttp2Session {
    fn as_ref(&self) -> &crate::node_js::EventEmitter {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::ClientHttp2Session> for crate::node_js::EventEmitter {
    fn from(child: crate::http2::ClientHttp2Session) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::http2::Http2Session> for crate::http2::ClientHttp2Session {
    fn as_ref(&self) -> &crate::http2::Http2Session {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::ClientHttp2Session> for crate::http2::Http2Session {
    fn from(child: crate::http2::ClientHttp2Session) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::node_js::EventEmitter> for crate::http2::ClientHttp2Stream {
    fn as_ref(&self) -> &crate::node_js::EventEmitter {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::ClientHttp2Stream> for crate::node_js::EventEmitter {
    fn from(child: crate::http2::ClientHttp2Stream) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::node_js::ReadableStream> for crate::http2::ClientHttp2Stream {
    fn as_ref(&self) -> &crate::node_js::ReadableStream {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::ClientHttp2Stream> for crate::node_js::ReadableStream {
    fn from(child: crate::http2::ClientHttp2Stream) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::node_js::WritableStream> for crate::http2::ClientHttp2Stream {
    fn as_ref(&self) -> &crate::node_js::WritableStream {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::ClientHttp2Stream> for crate::node_js::WritableStream {
    fn from(child: crate::http2::ClientHttp2Stream) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::http2::Http2Stream> for crate::http2::ClientHttp2Stream {
    fn as_ref(&self) -> &crate::http2::Http2Stream {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::ClientHttp2Stream> for crate::http2::Http2Stream {
    fn from(child: crate::http2::ClientHttp2Stream) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::http2::SessionOptions> for crate::http2::ClientSessionOptions {
    fn as_ref(&self) -> &crate::http2::SessionOptions {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::ClientSessionOptions> for crate::http2::SessionOptions {
    fn from(child: crate::http2::ClientSessionOptions) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::node_js::EventEmitter> for crate::http2::Http2SecureServer {
    fn as_ref(&self) -> &crate::node_js::EventEmitter {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::Http2SecureServer> for crate::node_js::EventEmitter {
    fn from(child: crate::http2::Http2SecureServer) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::net::Server> for crate::http2::Http2SecureServer {
    fn as_ref(&self) -> &crate::net::Server {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::Http2SecureServer> for crate::net::Server {
    fn from(child: crate::http2::Http2SecureServer) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::tls::Server> for crate::http2::Http2SecureServer {
    fn as_ref(&self) -> &crate::tls::Server {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::Http2SecureServer> for crate::tls::Server {
    fn from(child: crate::http2::Http2SecureServer) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::node_js::EventEmitter> for crate::http2::Http2Server {
    fn as_ref(&self) -> &crate::node_js::EventEmitter {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::Http2Server> for crate::node_js::EventEmitter {
    fn from(child: crate::http2::Http2Server) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::net::Server> for crate::http2::Http2Server {
    fn as_ref(&self) -> &crate::net::Server {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::Http2Server> for crate::net::Server {
    fn from(child: crate::http2::Http2Server) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::node_js::EventEmitter> for crate::http2::Http2ServerRequest {
    fn as_ref(&self) -> &crate::node_js::EventEmitter {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::Http2ServerRequest> for crate::node_js::EventEmitter {
    fn from(child: crate::http2::Http2ServerRequest) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::node_js::ReadableStream> for crate::http2::Http2ServerRequest {
    fn as_ref(&self) -> &crate::node_js::ReadableStream {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::Http2ServerRequest> for crate::node_js::ReadableStream {
    fn from(child: crate::http2::Http2ServerRequest) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::node_js::EventEmitter> for crate::http2::Http2ServerResponse {
    fn as_ref(&self) -> &crate::node_js::EventEmitter {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::Http2ServerResponse> for crate::node_js::EventEmitter {
    fn from(child: crate::http2::Http2ServerResponse) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::node_js::EventEmitter> for crate::http2::Http2Session {
    fn as_ref(&self) -> &crate::node_js::EventEmitter {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::Http2Session> for crate::node_js::EventEmitter {
    fn from(child: crate::http2::Http2Session) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::node_js::EventEmitter> for crate::http2::Http2Stream {
    fn as_ref(&self) -> &crate::node_js::EventEmitter {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::Http2Stream> for crate::node_js::EventEmitter {
    fn from(child: crate::http2::Http2Stream) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::node_js::ReadableStream> for crate::http2::Http2Stream {
    fn as_ref(&self) -> &crate::node_js::ReadableStream {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::Http2Stream> for crate::node_js::ReadableStream {
    fn from(child: crate::http2::Http2Stream) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::node_js::WritableStream> for crate::http2::Http2Stream {
    fn as_ref(&self) -> &crate::node_js::WritableStream {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::Http2Stream> for crate::node_js::WritableStream {
    fn from(child: crate::http2::Http2Stream) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<Http1IncomingHttpHeaders> for crate::http2::IncomingHttpHeaders {
    fn as_ref(&self) -> &Http1IncomingHttpHeaders {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::IncomingHttpHeaders> for Http1IncomingHttpHeaders {
    fn from(child: crate::http2::IncomingHttpHeaders) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::http2::ClientSessionOptions> for crate::http2::SecureClientSessionOptions {
    fn as_ref(&self) -> &crate::http2::ClientSessionOptions {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::SecureClientSessionOptions> for crate::http2::ClientSessionOptions {
    fn from(child: crate::http2::SecureClientSessionOptions) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::http2::SessionOptions> for crate::http2::SecureClientSessionOptions {
    fn as_ref(&self) -> &crate::http2::SessionOptions {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::SecureClientSessionOptions> for crate::http2::SessionOptions {
    fn from(child: crate::http2::SecureClientSessionOptions) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::tls::CommonConnectionOptions> for crate::http2::SecureClientSessionOptions {
    fn as_ref(&self) -> &crate::tls::CommonConnectionOptions {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::SecureClientSessionOptions> for crate::tls::CommonConnectionOptions {
    fn from(child: crate::http2::SecureClientSessionOptions) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::tls::ConnectionOptions> for crate::http2::SecureClientSessionOptions {
    fn as_ref(&self) -> &crate::tls::ConnectionOptions {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::SecureClientSessionOptions> for crate::tls::ConnectionOptions {
    fn from(child: crate::http2::SecureClientSessionOptions) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::tls::SecureContextOptions> for crate::http2::SecureClientSessionOptions {
    fn as_ref(&self) -> &crate::tls::SecureContextOptions {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::SecureClientSessionOptions> for crate::tls::SecureContextOptions {
    fn from(child: crate::http2::SecureClientSessionOptions) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::http2::SecureServerSessionOptions> for crate::http2::SecureServerOptions {
    fn as_ref(&self) -> &crate::http2::SecureServerSessionOptions {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::SecureServerOptions> for crate::http2::SecureServerSessionOptions {
    fn from(child: crate::http2::SecureServerOptions) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::http2::ServerSessionOptions> for crate::http2::SecureServerOptions {
    fn as_ref(&self) -> &crate::http2::ServerSessionOptions {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::SecureServerOptions> for crate::http2::ServerSessionOptions {
    fn from(child: crate::http2::SecureServerOptions) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::http2::SessionOptions> for crate::http2::SecureServerOptions {
    fn as_ref(&self) -> &crate::http2::SessionOptions {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::SecureServerOptions> for crate::http2::SessionOptions {
    fn from(child: crate::http2::SecureServerOptions) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::tls::CommonConnectionOptions> for crate::http2::SecureServerOptions {
    fn as_ref(&self) -> &crate::tls::CommonConnectionOptions {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::SecureServerOptions> for crate::tls::CommonConnectionOptions {
    fn from(child: crate::http2::SecureServerOptions) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::tls::SecureContextOptions> for crate::http2::SecureServerOptions {
    fn as_ref(&self) -> &crate::tls::SecureContextOptions {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::SecureServerOptions> for crate::tls::SecureContextOptions {
    fn from(child: crate::http2::SecureServerOptions) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::tls::TlsOptions> for crate::http2::SecureServerOptions {
    fn as_ref(&self) -> &crate::tls::TlsOptions {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::SecureServerOptions> for crate::tls::TlsOptions {
    fn from(child: crate::http2::SecureServerOptions) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::http2::ServerSessionOptions> for crate::http2::SecureServerSessionOptions {
    fn as_ref(&self) -> &crate::http2::ServerSessionOptions {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::SecureServerSessionOptions> for crate::http2::ServerSessionOptions {
    fn from(child: crate::http2::SecureServerSessionOptions) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::http2::SessionOptions> for crate::http2::SecureServerSessionOptions {
    fn as_ref(&self) -> &crate::http2::SessionOptions {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::SecureServerSessionOptions> for crate::http2::SessionOptions {
    fn from(child: crate::http2::SecureServerSessionOptions) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::tls::CommonConnectionOptions> for crate::http2::SecureServerSessionOptions {
    fn as_ref(&self) -> &crate::tls::CommonConnectionOptions {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::SecureServerSessionOptions> for crate::tls::CommonConnectionOptions {
    fn from(child: crate::http2::SecureServerSessionOptions) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::tls::SecureContextOptions> for crate::http2::SecureServerSessionOptions {
    fn as_ref(&self) -> &crate::tls::SecureContextOptions {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::SecureServerSessionOptions> for crate::tls::SecureContextOptions {
    fn from(child: crate::http2::SecureServerSessionOptions) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::tls::TlsOptions> for crate::http2::SecureServerSessionOptions {
    fn as_ref(&self) -> &crate::tls::TlsOptions {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::SecureServerSessionOptions> for crate::tls::TlsOptions {
    fn from(child: crate::http2::SecureServerSessionOptions) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::node_js::EventEmitter> for crate::http2::ServerHttp2Session {
    fn as_ref(&self) -> &crate::node_js::EventEmitter {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::ServerHttp2Session> for crate::node_js::EventEmitter {
    fn from(child: crate::http2::ServerHttp2Session) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::http2::Http2Session> for crate::http2::ServerHttp2Session {
    fn as_ref(&self) -> &crate::http2::Http2Session {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::ServerHttp2Session> for crate::http2::Http2Session {
    fn from(child: crate::http2::ServerHttp2Session) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::node_js::EventEmitter> for crate::http2::ServerHttp2Stream {
    fn as_ref(&self) -> &crate::node_js::EventEmitter {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::ServerHttp2Stream> for crate::node_js::EventEmitter {
    fn from(child: crate::http2::ServerHttp2Stream) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::node_js::ReadableStream> for crate::http2::ServerHttp2Stream {
    fn as_ref(&self) -> &crate::node_js::ReadableStream {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::ServerHttp2Stream> for crate::node_js::ReadableStream {
    fn from(child: crate::http2::ServerHttp2Stream) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::node_js::WritableStream> for crate::http2::ServerHttp2Stream {
    fn as_ref(&self) -> &crate::node_js::WritableStream {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::ServerHttp2Stream> for crate::node_js::WritableStream {
    fn from(child: crate::http2::ServerHttp2Stream) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::http2::Http2Stream> for crate::http2::ServerHttp2Stream {
    fn as_ref(&self) -> &crate::http2::Http2Stream {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::ServerHttp2Stream> for crate::http2::Http2Stream {
    fn from(child: crate::http2::ServerHttp2Stream) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::http2::ServerSessionOptions> for crate::http2::ServerOptions {
    fn as_ref(&self) -> &crate::http2::ServerSessionOptions {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::ServerOptions> for crate::http2::ServerSessionOptions {
    fn from(child: crate::http2::ServerOptions) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::http2::SessionOptions> for crate::http2::ServerOptions {
    fn as_ref(&self) -> &crate::http2::SessionOptions {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::ServerOptions> for crate::http2::SessionOptions {
    fn from(child: crate::http2::ServerOptions) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::http2::SessionOptions> for crate::http2::ServerSessionOptions {
    fn as_ref(&self) -> &crate::http2::SessionOptions {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::ServerSessionOptions> for crate::http2::SessionOptions {
    fn from(child: crate::http2::ServerSessionOptions) -> Self {
        JsCast::unchecked_into(child)
    }
}
impl AsRef<crate::http2::ServerStreamFileResponseOptions>
    for crate::http2::ServerStreamFileResponseOptionsWithError
{
    fn as_ref(&self) -> &crate::http2::ServerStreamFileResponseOptions {
        JsCast::unchecked_ref(self)
    }
}
impl From<crate::http2::ServerStreamFileResponseOptionsWithError>
    for crate::http2::ServerStreamFileResponseOptions
{
    fn from(child: crate::http2::ServerStreamFileResponseOptionsWithError) -> Self {
        JsCast::unchecked_into(child)
    }
}
