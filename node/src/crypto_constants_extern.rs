// generated by ts2rs 0.1.4
// https://ts2rs.ctaggart.com/

#[wasm_bindgen(module = "crypto")]
extern "C" {
    pub static OPENSSL_VERSION_NUMBER: String;
    #[doc = "Applies multiple bug workarounds within OpenSSL. See https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html for detail."]
    pub static SSL_OP_ALL: String;
    #[doc = "Allows legacy insecure renegotiation between OpenSSL and unpatched clients or servers. See https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html."]
    pub static SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION: String;
    #[doc = "Attempts to use the server's preferences instead of the client's when selecting a cipher. See https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html."]
    pub static SSL_OP_CIPHER_SERVER_PREFERENCE: String;
    #[doc = "Instructs OpenSSL to use Cisco's \"speshul\" version of DTLS_BAD_VER."]
    pub static SSL_OP_CISCO_ANYCONNECT: String;
    #[doc = "Instructs OpenSSL to turn on cookie exchange."]
    pub static SSL_OP_COOKIE_EXCHANGE: String;
    #[doc = "Instructs OpenSSL to add server-hello extension from an early version of the cryptopro draft."]
    pub static SSL_OP_CRYPTOPRO_TLSEXT_BUG: String;
    #[doc = "Instructs OpenSSL to disable a SSL 3.0/TLS 1.0 vulnerability workaround added in OpenSSL 0.9.6d."]
    pub static SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS: String;
    #[doc = "Instructs OpenSSL to always use the tmp_rsa key when performing RSA operations."]
    pub static SSL_OP_EPHEMERAL_RSA: String;
    #[doc = "Allows initial connection to servers that do not support RI."]
    pub static SSL_OP_LEGACY_SERVER_CONNECT: String;
    pub static SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER: String;
    pub static SSL_OP_MICROSOFT_SESS_ID_BUG: String;
    #[doc = "Instructs OpenSSL to disable the workaround for a man-in-the-middle protocol-version vulnerability in the SSL 2.0 server implementation."]
    pub static SSL_OP_MSIE_SSLV2_RSA_PADDING: String;
    pub static SSL_OP_NETSCAPE_CA_DN_BUG: String;
    pub static SSL_OP_NETSCAPE_CHALLENGE_BUG: String;
    pub static SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG: String;
    pub static SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG: String;
    #[doc = "Instructs OpenSSL to disable support for SSL/TLS compression."]
    pub static SSL_OP_NO_COMPRESSION: String;
    pub static SSL_OP_NO_QUERY_MTU: String;
    #[doc = "Instructs OpenSSL to always start a new session when performing renegotiation."]
    pub static SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION: String;
    #[wasm_bindgen(js_name = "SSL_OP_NO_SSLv2")]
    pub static SSL_OP_NO_SS_LV2: String;
    #[wasm_bindgen(js_name = "SSL_OP_NO_SSLv3")]
    pub static SSL_OP_NO_SS_LV3: String;
    pub static SSL_OP_NO_TICKET: String;
    #[wasm_bindgen(js_name = "SSL_OP_NO_TLSv1")]
    pub static SSL_OP_NO_TL_SV1: String;
    #[wasm_bindgen(js_name = "SSL_OP_NO_TLSv1_1")]
    pub static SSL_OP_NO_TL_SV1_1: String;
    #[wasm_bindgen(js_name = "SSL_OP_NO_TLSv1_2")]
    pub static SSL_OP_NO_TL_SV1_2: String;
    pub static SSL_OP_PKCS1_CHECK_1: String;
    pub static SSL_OP_PKCS1_CHECK_2: String;
    #[doc = "Instructs OpenSSL to always create a new key when using temporary/ephemeral DH parameters."]
    pub static SSL_OP_SINGLE_DH_USE: String;
    #[doc = "Instructs OpenSSL to always create a new key when using temporary/ephemeral ECDH parameters."]
    pub static SSL_OP_SINGLE_ECDH_USE: String;
    pub static SSL_OP_SSLEAY_080_CLIENT_DH_BUG: String;
    pub static SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG: String;
    pub static SSL_OP_TLS_BLOCK_PADDING_BUG: String;
    pub static SSL_OP_TLS_D5_BUG: String;
    #[doc = "Instructs OpenSSL to disable version rollback attack detection."]
    pub static SSL_OP_TLS_ROLLBACK_BUG: String;
    pub static ENGINE_METHOD_RSA: String;
    pub static ENGINE_METHOD_DSA: String;
    pub static ENGINE_METHOD_DH: String;
    pub static ENGINE_METHOD_RAND: String;
    pub static ENGINE_METHOD_EC: String;
    pub static ENGINE_METHOD_CIPHERS: String;
    pub static ENGINE_METHOD_DIGESTS: String;
    pub static ENGINE_METHOD_PKEY_METHS: String;
    pub static ENGINE_METHOD_PKEY_ASN1_METHS: String;
    pub static ENGINE_METHOD_ALL: String;
    pub static ENGINE_METHOD_NONE: String;
    pub static DH_CHECK_P_NOT_SAFE_PRIME: String;
    pub static DH_CHECK_P_NOT_PRIME: String;
    pub static DH_UNABLE_TO_CHECK_GENERATOR: String;
    pub static DH_NOT_SUITABLE_GENERATOR: String;
    pub static ALPN_ENABLED: String;
    pub static RSA_PKCS1_PADDING: String;
    pub static RSA_SSLV23_PADDING: String;
    pub static RSA_NO_PADDING: String;
    pub static RSA_PKCS1_OAEP_PADDING: String;
    pub static RSA_X931_PADDING: String;
    pub static RSA_PKCS1_PSS_PADDING: String;
    #[doc = "Sets the salt length for RSA_PKCS1_PSS_PADDING to the digest size when signing or verifying."]
    pub static RSA_PSS_SALTLEN_DIGEST: String;
    #[doc = "Sets the salt length for RSA_PKCS1_PSS_PADDING to the maximum permissible value when signing data."]
    pub static RSA_PSS_SALTLEN_MAX_SIGN: String;
    #[doc = "Causes the salt length for RSA_PKCS1_PSS_PADDING to be determined automatically when verifying a signature."]
    pub static RSA_PSS_SALTLEN_AUTO: String;
    pub static POINT_CONVERSION_COMPRESSED: String;
    pub static POINT_CONVERSION_UNCOMPRESSED: String;
    pub static POINT_CONVERSION_HYBRID: String;
    #[wasm_bindgen(js_name = "defaultCoreCipherList")]
    #[doc = "Specifies the built-in default cipher list used by Node.js (colon-separated values)."]
    pub static DEFAULT_CORE_CIPHER_LIST: String;
    #[wasm_bindgen(js_name = "defaultCipherList")]
    #[doc = "Specifies the active default cipher list used by the current Node.js process  (colon-separated values)."]
    pub static DEFAULT_CIPHER_LIST: String;
}
