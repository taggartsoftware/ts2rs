// generated by ts2rs 0.1.4
// https://ts2rs.ctaggart.com/

#[wasm_bindgen(module = "http")]
extern "C" {
    pub type IncomingHttpHeaders;
    #[wasm_bindgen(method, getter)]
    pub fn stringliteral(this: &IncomingHttpHeaders) -> Option<String>;
    #[wasm_bindgen(method, setter)]
    pub fn set_stringliteral(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral2(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral2(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral3(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral3(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral4(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral4(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral5(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral5(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral6(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral6(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral7(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral7(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral8(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral8(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral9(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral9(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral10(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral10(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral11(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral11(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral12(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral12(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral13(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral13(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral14(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral14(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral15(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral15(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral16(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral16(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral17(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral17(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral18(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral18(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral19(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral19(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral20(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral20(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral21(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral21(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral22(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral22(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral23(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral23(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral24(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral24(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral25(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral25(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral26(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral26(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral27(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral27(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral28(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral28(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral29(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral29(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral30(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral30(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral31(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral31(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral32(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral32(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral33(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral33(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral34(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral34(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral35(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral35(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral36(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral36(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral37(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral37(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral38(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral38(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral39(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral39(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral40(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral40(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral41(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral41(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral42(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral42(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral43(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral43(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral44(this: &IncomingHttpHeaders) -> Option<Array>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral44(this: &IncomingHttpHeaders, value: Option<&Array>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral45(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral45(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral46(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral46(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral47(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral47(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral48(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral48(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral49(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral49(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral50(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral50(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral51(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral51(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral52(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral52(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral53(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral53(this: &IncomingHttpHeaders, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = stringliteral ) ]
    pub fn stringliteral54(this: &IncomingHttpHeaders) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = stringliteral ) ]
    pub fn set_stringliteral54(this: &IncomingHttpHeaders, value: Option<&str>);
    pub type OutgoingHttpHeaders;
    pub type ClientRequestArgs;
    #[wasm_bindgen(method, getter)]
    pub fn protocol(this: &ClientRequestArgs) -> JsValue;
    #[wasm_bindgen(method, setter)]
    pub fn set_protocol(this: &ClientRequestArgs, value: &JsValue);
    #[wasm_bindgen(method, getter)]
    pub fn host(this: &ClientRequestArgs) -> JsValue;
    #[wasm_bindgen(method, setter)]
    pub fn set_host(this: &ClientRequestArgs, value: &JsValue);
    #[wasm_bindgen(method, getter)]
    pub fn hostname(this: &ClientRequestArgs) -> JsValue;
    #[wasm_bindgen(method, setter)]
    pub fn set_hostname(this: &ClientRequestArgs, value: &JsValue);
    #[wasm_bindgen(method, getter)]
    pub fn family(this: &ClientRequestArgs) -> Option<f64>;
    #[wasm_bindgen(method, setter)]
    pub fn set_family(this: &ClientRequestArgs, value: Option<f64>);
    #[wasm_bindgen(method, getter)]
    pub fn port(this: &ClientRequestArgs) -> JsValue;
    #[wasm_bindgen(method, setter)]
    pub fn set_port(this: &ClientRequestArgs, value: &JsValue);
    # [ wasm_bindgen ( method , getter , js_name = defaultPort ) ]
    pub fn default_port(this: &ClientRequestArgs) -> JsValue;
    # [ wasm_bindgen ( method , setter , js_name = defaultPort ) ]
    pub fn set_default_port(this: &ClientRequestArgs, value: &JsValue);
    # [ wasm_bindgen ( method , getter , js_name = localAddress ) ]
    pub fn local_address(this: &ClientRequestArgs) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = localAddress ) ]
    pub fn set_local_address(this: &ClientRequestArgs, value: Option<&str>);
    # [ wasm_bindgen ( method , getter , js_name = socketPath ) ]
    pub fn socket_path(this: &ClientRequestArgs) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = socketPath ) ]
    pub fn set_socket_path(this: &ClientRequestArgs, value: Option<&str>);
    #[wasm_bindgen(method, getter)]
    pub fn method(this: &ClientRequestArgs) -> Option<String>;
    #[wasm_bindgen(method, setter)]
    pub fn set_method(this: &ClientRequestArgs, value: Option<&str>);
    #[wasm_bindgen(method, getter)]
    pub fn path(this: &ClientRequestArgs) -> JsValue;
    #[wasm_bindgen(method, setter)]
    pub fn set_path(this: &ClientRequestArgs, value: &JsValue);
    #[wasm_bindgen(method, getter)]
    pub fn headers(this: &ClientRequestArgs) -> Option<OutgoingHttpHeaders>;
    #[wasm_bindgen(method, setter)]
    pub fn set_headers(this: &ClientRequestArgs, value: Option<&OutgoingHttpHeaders>);
    #[wasm_bindgen(method, getter)]
    pub fn auth(this: &ClientRequestArgs) -> JsValue;
    #[wasm_bindgen(method, setter)]
    pub fn set_auth(this: &ClientRequestArgs, value: &JsValue);
    #[wasm_bindgen(method, getter)]
    pub fn agent(this: &ClientRequestArgs) -> JsValue;
    #[wasm_bindgen(method, setter)]
    pub fn set_agent(this: &ClientRequestArgs, value: &JsValue);
    # [ wasm_bindgen ( method , getter , js_name = _defaultAgent ) ]
    pub fn default_agent(this: &ClientRequestArgs) -> Option<Agent>;
    # [ wasm_bindgen ( method , setter , js_name = _defaultAgent ) ]
    pub fn set_default_agent(this: &ClientRequestArgs, value: Option<&Agent>);
    #[wasm_bindgen(method, getter)]
    pub fn timeout(this: &ClientRequestArgs) -> Option<f64>;
    #[wasm_bindgen(method, setter)]
    pub fn set_timeout(this: &ClientRequestArgs, value: Option<f64>);
    # [ wasm_bindgen ( method , getter , js_name = setHost ) ]
    pub fn set_host(this: &ClientRequestArgs) -> Option<bool>;
    # [ wasm_bindgen ( method , setter , js_name = setHost ) ]
    pub fn set_set_host(this: &ClientRequestArgs, value: Option<bool>);
    # [ wasm_bindgen ( method , getter , js_name = createConnection ) ]
    pub fn create_connection(this: &ClientRequestArgs) -> Option<Function>;
    # [ wasm_bindgen ( method , setter , js_name = createConnection ) ]
    pub fn set_create_connection(this: &ClientRequestArgs, value: Option<&Function>);
    pub type ServerOptions;
    # [ wasm_bindgen ( method , getter , js_name = IncomingMessage ) ]
    pub fn incoming_message(this: &ServerOptions) -> JsValue;
    # [ wasm_bindgen ( method , setter , js_name = IncomingMessage ) ]
    pub fn set_incoming_message(this: &ServerOptions, value: &JsValue);
    # [ wasm_bindgen ( method , getter , js_name = ServerResponse ) ]
    pub fn server_response(this: &ServerOptions) -> JsValue;
    # [ wasm_bindgen ( method , setter , js_name = ServerResponse ) ]
    pub fn set_server_response(this: &ServerOptions, value: &JsValue);
    pub type RequestListener;
    pub type Server;
    #[wasm_bindgen(constructor)]
    pub fn new_server(request_listener: Option<&RequestListener>) -> Server;
    #[wasm_bindgen(constructor)]
    pub fn new_server2(
        options: &ServerOptions,
        request_listener: Option<&RequestListener>,
    ) -> Server;
    # [ wasm_bindgen ( method , js_name = setTimeout ) ]
    pub fn set_timeout(this: &Server, msecs: Option<f64>, callback: &JsValue) -> Server;
    # [ wasm_bindgen ( method , setter , js_name = setTimeout ) ]
    pub fn set_set_timeout(this: &Server, value: &Function);
    # [ wasm_bindgen ( method , js_name = setTimeout ) ]
    pub fn set_timeout2(this: &Server, callback: &JsValue) -> Server;
    # [ wasm_bindgen ( method , setter , js_name = setTimeout ) ]
    pub fn set_set_timeout2(this: &Server, value: &Function);
    #[doc = "Limits maximum incoming headers count. If set to 0, no limit will be applied."]
    # [ wasm_bindgen ( method , getter , js_name = maxHeadersCount ) ]
    pub fn max_headers_count(this: &Server) -> JsValue;
    # [ wasm_bindgen ( method , setter , js_name = maxHeadersCount ) ]
    pub fn set_max_headers_count(this: &Server, value: &JsValue);
    #[wasm_bindgen(method, getter)]
    pub fn timeout(this: &Server) -> f64;
    #[wasm_bindgen(method, setter)]
    pub fn set_timeout(this: &Server, value: f64);
    #[doc = "Limit the amount of time the parser will wait to receive the complete HTTP headers."]
    # [ wasm_bindgen ( method , getter , js_name = headersTimeout ) ]
    pub fn headers_timeout(this: &Server) -> f64;
    # [ wasm_bindgen ( method , setter , js_name = headersTimeout ) ]
    pub fn set_headers_timeout(this: &Server, value: f64);
    # [ wasm_bindgen ( method , getter , js_name = keepAliveTimeout ) ]
    pub fn keep_alive_timeout(this: &Server) -> f64;
    # [ wasm_bindgen ( method , setter , js_name = keepAliveTimeout ) ]
    pub fn set_keep_alive_timeout(this: &Server, value: f64);
    pub type OutgoingMessage;
    #[wasm_bindgen(method, getter)]
    pub fn upgrading(this: &OutgoingMessage) -> bool;
    #[wasm_bindgen(method, setter)]
    pub fn set_upgrading(this: &OutgoingMessage, value: bool);
    # [ wasm_bindgen ( method , getter , js_name = chunkedEncoding ) ]
    pub fn chunked_encoding(this: &OutgoingMessage) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = chunkedEncoding ) ]
    pub fn set_chunked_encoding(this: &OutgoingMessage, value: bool);
    # [ wasm_bindgen ( method , getter , js_name = shouldKeepAlive ) ]
    pub fn should_keep_alive(this: &OutgoingMessage) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = shouldKeepAlive ) ]
    pub fn set_should_keep_alive(this: &OutgoingMessage, value: bool);
    # [ wasm_bindgen ( method , getter , js_name = useChunkedEncodingByDefault ) ]
    pub fn use_chunked_encoding_by_default(this: &OutgoingMessage) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = useChunkedEncodingByDefault ) ]
    pub fn set_use_chunked_encoding_by_default(this: &OutgoingMessage, value: bool);
    # [ wasm_bindgen ( method , getter , js_name = sendDate ) ]
    pub fn send_date(this: &OutgoingMessage) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = sendDate ) ]
    pub fn set_send_date(this: &OutgoingMessage, value: bool);
    #[wasm_bindgen(method, getter)]
    pub fn finished(this: &OutgoingMessage) -> bool;
    #[wasm_bindgen(method, setter)]
    pub fn set_finished(this: &OutgoingMessage, value: bool);
    # [ wasm_bindgen ( method , getter , js_name = headersSent ) ]
    pub fn headers_sent(this: &OutgoingMessage) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = headersSent ) ]
    pub fn set_headers_sent(this: &OutgoingMessage, value: bool);
    #[wasm_bindgen(method, getter)]
    pub fn connection(this: &OutgoingMessage) -> Socket;
    #[wasm_bindgen(method, setter)]
    pub fn set_connection(this: &OutgoingMessage, value: &Socket);
    #[wasm_bindgen(constructor)]
    pub fn new_outgoing_message() -> OutgoingMessage;
    # [ wasm_bindgen ( method , js_name = setTimeout ) ]
    pub fn set_timeout(this: &OutgoingMessage, msecs: f64, callback: &JsValue) -> OutgoingMessage;
    # [ wasm_bindgen ( method , setter , js_name = setTimeout ) ]
    pub fn set_set_timeout(this: &OutgoingMessage, value: &Function);
    # [ wasm_bindgen ( method , js_name = setHeader ) ]
    pub fn set_header(this: &OutgoingMessage, name: &str, value: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = setHeader ) ]
    pub fn set_set_header(this: &OutgoingMessage, value: &Function);
    # [ wasm_bindgen ( method , js_name = getHeader ) ]
    pub fn get_header(this: &OutgoingMessage, name: &str) -> JsValue;
    # [ wasm_bindgen ( method , setter , js_name = getHeader ) ]
    pub fn set_get_header(this: &OutgoingMessage, value: &Function);
    # [ wasm_bindgen ( method , js_name = getHeaders ) ]
    pub fn get_headers(this: &OutgoingMessage) -> OutgoingHttpHeaders;
    # [ wasm_bindgen ( method , setter , js_name = getHeaders ) ]
    pub fn set_get_headers(this: &OutgoingMessage, value: &Function);
    # [ wasm_bindgen ( method , js_name = getHeaderNames ) ]
    pub fn get_header_names(this: &OutgoingMessage) -> Array;
    # [ wasm_bindgen ( method , setter , js_name = getHeaderNames ) ]
    pub fn set_get_header_names(this: &OutgoingMessage, value: &Function);
    # [ wasm_bindgen ( method , js_name = hasHeader ) ]
    pub fn has_header(this: &OutgoingMessage, name: &str) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = hasHeader ) ]
    pub fn set_has_header(this: &OutgoingMessage, value: &Function);
    # [ wasm_bindgen ( method , js_name = removeHeader ) ]
    pub fn remove_header(this: &OutgoingMessage, name: &str);
    # [ wasm_bindgen ( method , setter , js_name = removeHeader ) ]
    pub fn set_remove_header(this: &OutgoingMessage, value: &Function);
    # [ wasm_bindgen ( method , js_name = addTrailers ) ]
    pub fn add_trailers(this: &OutgoingMessage, headers: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = addTrailers ) ]
    pub fn set_add_trailers(this: &OutgoingMessage, value: &Function);
    # [ wasm_bindgen ( method , js_name = flushHeaders ) ]
    pub fn flush_headers(this: &OutgoingMessage);
    # [ wasm_bindgen ( method , setter , js_name = flushHeaders ) ]
    pub fn set_flush_headers(this: &OutgoingMessage, value: &Function);
    pub type ServerResponse;
    # [ wasm_bindgen ( method , getter , js_name = statusCode ) ]
    pub fn status_code(this: &ServerResponse) -> f64;
    # [ wasm_bindgen ( method , setter , js_name = statusCode ) ]
    pub fn set_status_code(this: &ServerResponse, value: f64);
    # [ wasm_bindgen ( method , getter , js_name = statusMessage ) ]
    pub fn status_message(this: &ServerResponse) -> String;
    # [ wasm_bindgen ( method , setter , js_name = statusMessage ) ]
    pub fn set_status_message(this: &ServerResponse, value: &str);
    # [ wasm_bindgen ( method , getter , js_name = writableFinished ) ]
    pub fn writable_finished(this: &ServerResponse) -> bool;
    # [ wasm_bindgen ( method , setter , js_name = writableFinished ) ]
    pub fn set_writable_finished(this: &ServerResponse, value: bool);
    #[wasm_bindgen(constructor)]
    pub fn new_server_response(req: &IncomingMessage) -> ServerResponse;
    # [ wasm_bindgen ( method , js_name = assignSocket ) ]
    pub fn assign_socket(this: &ServerResponse, socket: &Socket);
    # [ wasm_bindgen ( method , setter , js_name = assignSocket ) ]
    pub fn set_assign_socket(this: &ServerResponse, value: &Function);
    # [ wasm_bindgen ( method , js_name = detachSocket ) ]
    pub fn detach_socket(this: &ServerResponse, socket: &Socket);
    # [ wasm_bindgen ( method , setter , js_name = detachSocket ) ]
    pub fn set_detach_socket(this: &ServerResponse, value: &Function);
    # [ wasm_bindgen ( method , js_name = writeContinue ) ]
    pub fn write_continue(this: &ServerResponse, callback: &JsValue);
    # [ wasm_bindgen ( method , setter , js_name = writeContinue ) ]
    pub fn set_write_continue(this: &ServerResponse, value: &Function);
    # [ wasm_bindgen ( method , js_name = writeHead ) ]
    pub fn write_head(
        this: &ServerResponse,
        status_code: f64,
        reason_phrase: Option<&str>,
        headers: Option<&OutgoingHttpHeaders>,
    ) -> ServerResponse;
    # [ wasm_bindgen ( method , setter , js_name = writeHead ) ]
    pub fn set_write_head(this: &ServerResponse, value: &Function);
    # [ wasm_bindgen ( method , js_name = writeHead ) ]
    pub fn write_head2(
        this: &ServerResponse,
        status_code: f64,
        headers: Option<&OutgoingHttpHeaders>,
    ) -> ServerResponse;
    # [ wasm_bindgen ( method , setter , js_name = writeHead ) ]
    pub fn set_write_head2(this: &ServerResponse, value: &Function);
    # [ wasm_bindgen ( method , js_name = writeProcessing ) ]
    pub fn write_processing(this: &ServerResponse);
    # [ wasm_bindgen ( method , setter , js_name = writeProcessing ) ]
    pub fn set_write_processing(this: &ServerResponse, value: &Function);
    pub type InformationEvent;
    # [ wasm_bindgen ( method , getter , js_name = statusCode ) ]
    pub fn status_code(this: &InformationEvent) -> f64;
    # [ wasm_bindgen ( method , setter , js_name = statusCode ) ]
    pub fn set_status_code(this: &InformationEvent, value: f64);
    # [ wasm_bindgen ( method , getter , js_name = statusMessage ) ]
    pub fn status_message(this: &InformationEvent) -> String;
    # [ wasm_bindgen ( method , setter , js_name = statusMessage ) ]
    pub fn set_status_message(this: &InformationEvent, value: &str);
    # [ wasm_bindgen ( method , getter , js_name = httpVersion ) ]
    pub fn http_version(this: &InformationEvent) -> String;
    # [ wasm_bindgen ( method , setter , js_name = httpVersion ) ]
    pub fn set_http_version(this: &InformationEvent, value: &str);
    # [ wasm_bindgen ( method , getter , js_name = httpVersionMajor ) ]
    pub fn http_version_major(this: &InformationEvent) -> f64;
    # [ wasm_bindgen ( method , setter , js_name = httpVersionMajor ) ]
    pub fn set_http_version_major(this: &InformationEvent, value: f64);
    # [ wasm_bindgen ( method , getter , js_name = httpVersionMinor ) ]
    pub fn http_version_minor(this: &InformationEvent) -> f64;
    # [ wasm_bindgen ( method , setter , js_name = httpVersionMinor ) ]
    pub fn set_http_version_minor(this: &InformationEvent, value: f64);
    #[wasm_bindgen(method, getter)]
    pub fn headers(this: &InformationEvent) -> IncomingHttpHeaders;
    #[wasm_bindgen(method, setter)]
    pub fn set_headers(this: &InformationEvent, value: &IncomingHttpHeaders);
    # [ wasm_bindgen ( method , getter , js_name = rawHeaders ) ]
    pub fn raw_headers(this: &InformationEvent) -> Array;
    # [ wasm_bindgen ( method , setter , js_name = rawHeaders ) ]
    pub fn set_raw_headers(this: &InformationEvent, value: &Array);
    pub type ClientRequest;
    #[wasm_bindgen(method, getter)]
    pub fn connection(this: &ClientRequest) -> Socket;
    #[wasm_bindgen(method, setter)]
    pub fn set_connection(this: &ClientRequest, value: &Socket);
    #[wasm_bindgen(method, getter)]
    pub fn socket(this: &ClientRequest) -> Socket;
    #[wasm_bindgen(method, setter)]
    pub fn set_socket(this: &ClientRequest, value: &Socket);
    #[wasm_bindgen(method, getter)]
    pub fn aborted(this: &ClientRequest) -> f64;
    #[wasm_bindgen(method, setter)]
    pub fn set_aborted(this: &ClientRequest, value: f64);
    #[wasm_bindgen(constructor)]
    pub fn new_client_request(url: &JsValue, cb: &JsValue) -> ClientRequest;
    #[wasm_bindgen(method, getter)]
    pub fn path(this: &ClientRequest) -> String;
    #[wasm_bindgen(method)]
    pub fn abort(this: &ClientRequest);
    #[wasm_bindgen(method, setter)]
    pub fn set_abort(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = onSocket ) ]
    pub fn on_socket(this: &ClientRequest, socket: &Socket);
    # [ wasm_bindgen ( method , setter , js_name = onSocket ) ]
    pub fn set_on_socket(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = setTimeout ) ]
    pub fn set_timeout(this: &ClientRequest, timeout: f64, callback: &JsValue) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = setTimeout ) ]
    pub fn set_set_timeout(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = setNoDelay ) ]
    pub fn set_no_delay(this: &ClientRequest, no_delay: Option<bool>);
    # [ wasm_bindgen ( method , setter , js_name = setNoDelay ) ]
    pub fn set_set_no_delay(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = setSocketKeepAlive ) ]
    pub fn set_socket_keep_alive(
        this: &ClientRequest,
        enable: Option<bool>,
        initial_delay: Option<f64>,
    );
    # [ wasm_bindgen ( method , setter , js_name = setSocketKeepAlive ) ]
    pub fn set_set_socket_keep_alive(this: &ClientRequest, value: &Function);
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener(this: &ClientRequest, event: &JsValue, listener: &JsValue)
    -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener(this: &ClientRequest, value: &Function);
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener2(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener2(this: &ClientRequest, value: &Function);
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener3(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener3(this: &ClientRequest, value: &Function);
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener4(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener4(this: &ClientRequest, value: &Function);
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener5(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener5(this: &ClientRequest, value: &Function);
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener6(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener6(this: &ClientRequest, value: &Function);
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener7(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener7(this: &ClientRequest, value: &Function);
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener8(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener8(this: &ClientRequest, value: &Function);
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener9(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener9(this: &ClientRequest, value: &Function);
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener10(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener10(this: &ClientRequest, value: &Function);
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener11(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener11(this: &ClientRequest, value: &Function);
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener12(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener12(this: &ClientRequest, value: &Function);
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener13(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener13(this: &ClientRequest, value: &Function);
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener14(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener14(this: &ClientRequest, value: &Function);
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    #[doc = ""]
    #[doc = ""]
    #[doc = "Event emitter"]
    #[doc = "The defined events on documents including:"]
    #[doc = "1. close"]
    #[doc = "2. drain"]
    #[doc = "3. error"]
    #[doc = "4. finish"]
    #[doc = "5. pipe"]
    #[doc = "6. unpipe"]
    # [ wasm_bindgen ( method , js_name = addListener ) ]
    pub fn add_listener15(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = addListener ) ]
    pub fn set_add_listener15(this: &ClientRequest, value: &Function);
    #[wasm_bindgen(method)]
    pub fn on(this: &ClientRequest, event: &JsValue, listener: &JsValue) -> ClientRequest;
    #[wasm_bindgen(method, setter)]
    pub fn set_on(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on2(this: &ClientRequest, event: &JsValue, listener: &JsValue) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on2(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on3(this: &ClientRequest, event: &JsValue, listener: &JsValue) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on3(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on4(this: &ClientRequest, event: &JsValue, listener: &JsValue) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on4(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on5(this: &ClientRequest, event: &JsValue, listener: &JsValue) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on5(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on6(this: &ClientRequest, event: &JsValue, listener: &JsValue) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on6(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on7(this: &ClientRequest, event: &JsValue, listener: &JsValue) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on7(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on8(this: &ClientRequest, event: &JsValue, listener: &JsValue) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on8(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on9(this: &ClientRequest, event: &JsValue, listener: &JsValue) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on9(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on10(this: &ClientRequest, event: &JsValue, listener: &JsValue) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on10(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on11(this: &ClientRequest, event: &JsValue, listener: &JsValue) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on11(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on12(this: &ClientRequest, event: &JsValue, listener: &JsValue) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on12(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on13(this: &ClientRequest, event: &JsValue, listener: &JsValue) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on13(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on14(this: &ClientRequest, event: &JsValue, listener: &JsValue) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on14(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = on ) ]
    pub fn on15(this: &ClientRequest, event: &JsValue, listener: &JsValue) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = on ) ]
    pub fn set_on15(this: &ClientRequest, value: &Function);
    #[wasm_bindgen(method)]
    pub fn once(this: &ClientRequest, event: &JsValue, listener: &JsValue) -> ClientRequest;
    #[wasm_bindgen(method, setter)]
    pub fn set_once(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once2(this: &ClientRequest, event: &JsValue, listener: &JsValue) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once2(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once3(this: &ClientRequest, event: &JsValue, listener: &JsValue) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once3(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once4(this: &ClientRequest, event: &JsValue, listener: &JsValue) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once4(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once5(this: &ClientRequest, event: &JsValue, listener: &JsValue) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once5(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once6(this: &ClientRequest, event: &JsValue, listener: &JsValue) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once6(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once7(this: &ClientRequest, event: &JsValue, listener: &JsValue) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once7(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once8(this: &ClientRequest, event: &JsValue, listener: &JsValue) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once8(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once9(this: &ClientRequest, event: &JsValue, listener: &JsValue) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once9(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once10(this: &ClientRequest, event: &JsValue, listener: &JsValue) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once10(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once11(this: &ClientRequest, event: &JsValue, listener: &JsValue) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once11(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once12(this: &ClientRequest, event: &JsValue, listener: &JsValue) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once12(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once13(this: &ClientRequest, event: &JsValue, listener: &JsValue) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once13(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once14(this: &ClientRequest, event: &JsValue, listener: &JsValue) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once14(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = once ) ]
    pub fn once15(this: &ClientRequest, event: &JsValue, listener: &JsValue) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = once ) ]
    pub fn set_once15(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener2(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener2(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener3(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener3(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener4(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener4(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener5(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener5(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener6(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener6(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener7(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener7(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener8(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener8(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener9(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener9(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener10(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener10(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener11(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener11(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener12(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener12(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener13(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener13(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener14(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener14(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependListener ) ]
    pub fn prepend_listener15(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = prependListener ) ]
    pub fn set_prepend_listener15(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener2(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener2(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener3(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener3(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener4(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener4(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener5(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener5(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener6(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener6(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener7(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener7(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener8(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener8(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener9(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener9(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener10(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener10(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener11(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener11(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener12(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener12(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener13(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener13(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener14(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener14(this: &ClientRequest, value: &Function);
    # [ wasm_bindgen ( method , js_name = prependOnceListener ) ]
    pub fn prepend_once_listener15(
        this: &ClientRequest,
        event: &JsValue,
        listener: &JsValue,
    ) -> ClientRequest;
    # [ wasm_bindgen ( method , setter , js_name = prependOnceListener ) ]
    pub fn set_prepend_once_listener15(this: &ClientRequest, value: &Function);
    pub type IncomingMessage;
    #[wasm_bindgen(constructor)]
    pub fn new_incoming_message(socket: &Socket) -> IncomingMessage;
    #[wasm_bindgen(method, getter)]
    pub fn aborted(this: &IncomingMessage) -> bool;
    #[wasm_bindgen(method, setter)]
    pub fn set_aborted(this: &IncomingMessage, value: bool);
    # [ wasm_bindgen ( method , getter , js_name = httpVersion ) ]
    pub fn http_version(this: &IncomingMessage) -> String;
    # [ wasm_bindgen ( method , setter , js_name = httpVersion ) ]
    pub fn set_http_version(this: &IncomingMessage, value: &str);
    # [ wasm_bindgen ( method , getter , js_name = httpVersionMajor ) ]
    pub fn http_version_major(this: &IncomingMessage) -> f64;
    # [ wasm_bindgen ( method , setter , js_name = httpVersionMajor ) ]
    pub fn set_http_version_major(this: &IncomingMessage, value: f64);
    # [ wasm_bindgen ( method , getter , js_name = httpVersionMinor ) ]
    pub fn http_version_minor(this: &IncomingMessage) -> f64;
    # [ wasm_bindgen ( method , setter , js_name = httpVersionMinor ) ]
    pub fn set_http_version_minor(this: &IncomingMessage, value: f64);
    #[wasm_bindgen(method, getter)]
    pub fn complete(this: &IncomingMessage) -> bool;
    #[wasm_bindgen(method, setter)]
    pub fn set_complete(this: &IncomingMessage, value: bool);
    #[wasm_bindgen(method, getter)]
    pub fn connection(this: &IncomingMessage) -> Socket;
    #[wasm_bindgen(method, setter)]
    pub fn set_connection(this: &IncomingMessage, value: &Socket);
    #[wasm_bindgen(method, getter)]
    pub fn headers(this: &IncomingMessage) -> IncomingHttpHeaders;
    #[wasm_bindgen(method, setter)]
    pub fn set_headers(this: &IncomingMessage, value: &IncomingHttpHeaders);
    # [ wasm_bindgen ( method , getter , js_name = rawHeaders ) ]
    pub fn raw_headers(this: &IncomingMessage) -> Array;
    # [ wasm_bindgen ( method , setter , js_name = rawHeaders ) ]
    pub fn set_raw_headers(this: &IncomingMessage, value: &Array);
    #[wasm_bindgen(method, getter)]
    pub fn trailers(this: &IncomingMessage) -> JsValue;
    #[wasm_bindgen(method, setter)]
    pub fn set_trailers(this: &IncomingMessage, value: &JsValue);
    # [ wasm_bindgen ( method , getter , js_name = rawTrailers ) ]
    pub fn raw_trailers(this: &IncomingMessage) -> Array;
    # [ wasm_bindgen ( method , setter , js_name = rawTrailers ) ]
    pub fn set_raw_trailers(this: &IncomingMessage, value: &Array);
    # [ wasm_bindgen ( method , js_name = setTimeout ) ]
    pub fn set_timeout(this: &IncomingMessage, msecs: f64, callback: &JsValue) -> IncomingMessage;
    # [ wasm_bindgen ( method , setter , js_name = setTimeout ) ]
    pub fn set_set_timeout(this: &IncomingMessage, value: &Function);
    #[doc = "Only valid for request obtained from http.Server."]
    #[wasm_bindgen(method, getter)]
    pub fn method(this: &IncomingMessage) -> Option<String>;
    #[wasm_bindgen(method, setter)]
    pub fn set_method(this: &IncomingMessage, value: Option<&str>);
    #[doc = "Only valid for request obtained from http.Server."]
    #[wasm_bindgen(method, getter)]
    pub fn url(this: &IncomingMessage) -> Option<String>;
    #[wasm_bindgen(method, setter)]
    pub fn set_url(this: &IncomingMessage, value: Option<&str>);
    #[doc = "Only valid for response obtained from http.ClientRequest."]
    # [ wasm_bindgen ( method , getter , js_name = statusCode ) ]
    pub fn status_code(this: &IncomingMessage) -> Option<f64>;
    # [ wasm_bindgen ( method , setter , js_name = statusCode ) ]
    pub fn set_status_code(this: &IncomingMessage, value: Option<f64>);
    #[doc = "Only valid for response obtained from http.ClientRequest."]
    # [ wasm_bindgen ( method , getter , js_name = statusMessage ) ]
    pub fn status_message(this: &IncomingMessage) -> Option<String>;
    # [ wasm_bindgen ( method , setter , js_name = statusMessage ) ]
    pub fn set_status_message(this: &IncomingMessage, value: Option<&str>);
    #[wasm_bindgen(method, getter)]
    pub fn socket(this: &IncomingMessage) -> Socket;
    #[wasm_bindgen(method, setter)]
    pub fn set_socket(this: &IncomingMessage, value: &Socket);
    #[wasm_bindgen(method)]
    pub fn destroy(this: &IncomingMessage, error: Option<&Error>);
    #[wasm_bindgen(method, setter)]
    pub fn set_destroy(this: &IncomingMessage, value: &Function);
    pub type AgentOptions;
    #[doc = "Keep sockets around in a pool to be used by other requests in the future. Default = false"]
    # [ wasm_bindgen ( method , getter , js_name = keepAlive ) ]
    pub fn keep_alive(this: &AgentOptions) -> Option<bool>;
    # [ wasm_bindgen ( method , setter , js_name = keepAlive ) ]
    pub fn set_keep_alive(this: &AgentOptions, value: Option<bool>);
    #[doc = "When using HTTP KeepAlive, how often to send TCP KeepAlive packets over sockets being kept alive. Default = 1000."]
    #[doc = "Only relevant if keepAlive is set to true."]
    # [ wasm_bindgen ( method , getter , js_name = keepAliveMsecs ) ]
    pub fn keep_alive_msecs(this: &AgentOptions) -> Option<f64>;
    # [ wasm_bindgen ( method , setter , js_name = keepAliveMsecs ) ]
    pub fn set_keep_alive_msecs(this: &AgentOptions, value: Option<f64>);
    #[doc = "Maximum number of sockets to allow per host. Default for Node 0.10 is 5, default for Node 0.12 is Infinity"]
    # [ wasm_bindgen ( method , getter , js_name = maxSockets ) ]
    pub fn max_sockets(this: &AgentOptions) -> Option<f64>;
    # [ wasm_bindgen ( method , setter , js_name = maxSockets ) ]
    pub fn set_max_sockets(this: &AgentOptions, value: Option<f64>);
    #[doc = "Maximum number of sockets to leave open in a free state. Only relevant if keepAlive is set to true. Default = 256."]
    # [ wasm_bindgen ( method , getter , js_name = maxFreeSockets ) ]
    pub fn max_free_sockets(this: &AgentOptions) -> Option<f64>;
    # [ wasm_bindgen ( method , setter , js_name = maxFreeSockets ) ]
    pub fn set_max_free_sockets(this: &AgentOptions, value: Option<f64>);
    #[doc = "Socket timeout in milliseconds. This will set the timeout after the socket is connected."]
    #[wasm_bindgen(method, getter)]
    pub fn timeout(this: &AgentOptions) -> Option<f64>;
    #[wasm_bindgen(method, setter)]
    pub fn set_timeout(this: &AgentOptions, value: Option<f64>);
    pub type Agent;
    # [ wasm_bindgen ( method , getter , js_name = maxFreeSockets ) ]
    pub fn max_free_sockets(this: &Agent) -> f64;
    # [ wasm_bindgen ( method , setter , js_name = maxFreeSockets ) ]
    pub fn set_max_free_sockets(this: &Agent, value: f64);
    # [ wasm_bindgen ( method , getter , js_name = maxSockets ) ]
    pub fn max_sockets(this: &Agent) -> f64;
    # [ wasm_bindgen ( method , setter , js_name = maxSockets ) ]
    pub fn set_max_sockets(this: &Agent, value: f64);
    #[wasm_bindgen(method, getter)]
    pub fn sockets(this: &Agent) -> JsValue;
    #[wasm_bindgen(method, getter)]
    pub fn requests(this: &Agent) -> JsValue;
    #[wasm_bindgen(constructor)]
    pub fn new_agent(opts: Option<&AgentOptions>) -> Agent;
    #[doc = "Destroy any sockets that are currently in use by the agent."]
    #[doc = "It is usually not necessary to do this. However, if you are using an agent with KeepAlive enabled,"]
    #[doc = "then it is best to explicitly shut down the agent when you know that it will no longer be used. Otherwise,"]
    #[doc = "sockets may hang open for quite a long time before the server terminates them."]
    #[wasm_bindgen(method)]
    pub fn destroy(this: &Agent);
    #[wasm_bindgen(method, setter)]
    pub fn set_destroy(this: &Agent, value: &Function);
    pub static METHODS: String;
    pub static STATUS_CODES: String;
    # [ wasm_bindgen ( js_name = createServer ) ]
    pub fn create_server(request_listener: Option<&RequestListener>) -> Server;
    # [ wasm_bindgen ( js_name = createServer ) ]
    pub fn create_server2(
        options: &ServerOptions,
        request_listener: Option<&RequestListener>,
    ) -> Server;
    pub type RequestOptions;
    #[wasm_bindgen()]
    pub fn request(options: &JsValue, callback: &JsValue) -> ClientRequest;
    # [ wasm_bindgen ( js_name = request ) ]
    pub fn request2(url: &JsValue, options: &RequestOptions, callback: &JsValue) -> ClientRequest;
    #[wasm_bindgen()]
    pub fn get(options: &JsValue, callback: &JsValue) -> ClientRequest;
    # [ wasm_bindgen ( js_name = get ) ]
    pub fn get2(url: &JsValue, options: &RequestOptions, callback: &JsValue) -> ClientRequest;
    #[wasm_bindgen(js_name = "globalAgent")]
    pub static GLOBAL_AGENT: String;
    #[wasm_bindgen(js_name = "maxHeaderSize")]
    #[doc = "Read-only property specifying the maximum allowed size of HTTP headers in bytes."]
    #[doc = "Defaults to 8KB. Configurable using the [`--max-http-header-size`][] CLI option."]
    pub static MAX_HEADER_SIZE: String;
}
